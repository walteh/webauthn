package cdkpipelinesgithub

import (
	"github.com/aws/aws-cdk-go/awscdk/v2/pipelines"
)

// Props for `GitHubWorkflow`.
// Experimental.
type GitHubWorkflowProps struct {
	// The build step that produces the CDK Cloud Assembly.
	//
	// The primary output of this step needs to be the `cdk.out` directory
	// generated by the `cdk synth` command.
	//
	// If you use a `ShellStep` here and you don't configure an output directory,
	// the output directory will automatically be assumed to be `cdk.out`.
	// Experimental.
	Synth pipelines.IFileSetProducer `field:"required" json:"synth" yaml:"synth"`
	// Names of GitHub repository secrets that include AWS credentials for deployment.
	// Default: - `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
	//
	// Deprecated: Use `awsCreds.fromGitHubSecrets()` instead.
	AwsCredentials *AwsCredentialsSecrets `field:"optional" json:"awsCredentials" yaml:"awsCredentials"`
	// Configure provider for AWS credentials used for deployment.
	// Default: - Get AWS credentials from GitHub secrets `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
	//
	// Experimental.
	AwsCreds AwsCredentialsProvider `field:"optional" json:"awsCreds" yaml:"awsCreds"`
	// Build container options.
	// Default: - GitHub defaults.
	//
	// Experimental.
	BuildContainer *ContainerOptions `field:"optional" json:"buildContainer" yaml:"buildContainer"`
	// Version of the CDK CLI to use.
	// Default: - automatic.
	//
	// Experimental.
	CdkCliVersion *string `field:"optional" json:"cdkCliVersion" yaml:"cdkCliVersion"`
	// The Docker Credentials to use to login.
	//
	// If you set this variable,
	// you will be logged in to docker when you upload Docker Assets.
	// Experimental.
	DockerCredentials *[]DockerCredential `field:"optional" json:"dockerCredentials" yaml:"dockerCredentials"`
	// A role that utilizes the GitHub OIDC Identity Provider in your AWS account.
	//
	// If supplied, this will be used instead of `awsCredentials`.
	//
	// You can create your own role in the console with the necessary trust policy
	// to allow gitHub actions from your gitHub repository to assume the role, or
	// you can utilize the `GitHubActionRole` construct to create a role for you.
	// Default: - GitHub repository secrets are used instead of OpenId Connect role.
	//
	// Deprecated: Use `awsCreds.fromOpenIdConnect()` instead.
	GitHubActionRoleArn *string `field:"optional" json:"gitHubActionRoleArn" yaml:"gitHubActionRoleArn"`
	// Job level settings that will be applied to all jobs in the workflow, including synth and asset deploy jobs.
	//
	// Currently the only valid setting
	// is 'if'. You can use this to run jobs only in specific repositories.
	// See: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-only-run-job-for-specific-repository
	//
	// Experimental.
	JobSettings *JobSettings `field:"optional" json:"jobSettings" yaml:"jobSettings"`
	// GitHub workflow steps to execute after build.
	// Default: [].
	//
	// Experimental.
	PostBuildSteps *[]*JobStep `field:"optional" json:"postBuildSteps" yaml:"postBuildSteps"`
	// GitHub workflow steps to execute before build.
	// Default: [].
	//
	// Experimental.
	PreBuildSteps *[]*JobStep `field:"optional" json:"preBuildSteps" yaml:"preBuildSteps"`
	// Indicates if the repository already contains a synthesized `cdk.out` directory, in which case we will simply checkout the repo in jobs that require `cdk.out`.
	// Default: false.
	//
	// Experimental.
	PreSynthed *bool `field:"optional" json:"preSynthed" yaml:"preSynthed"`
	// Will assume the GitHubActionRole in this region when publishing assets.
	//
	// This is NOT the region in which the assets are published.
	//
	// In most cases, you do not have to worry about this property, and can safely
	// ignore it.
	// Default: "us-west-2".
	//
	// Experimental.
	PublishAssetsAuthRegion *string `field:"optional" json:"publishAssetsAuthRegion" yaml:"publishAssetsAuthRegion"`
	// The type of runner to run the job on.
	//
	// The runner can be either a
	// GitHub-hosted runner or a self-hosted runner.
	// Default: Runner.UBUNTU_LATEST
	//
	// Experimental.
	Runner Runner `field:"optional" json:"runner" yaml:"runner"`
	// Name of the workflow.
	// Default: "deploy".
	//
	// Experimental.
	WorkflowName *string `field:"optional" json:"workflowName" yaml:"workflowName"`
	// File path for the GitHub workflow.
	// Default: ".github/workflows/deploy.yml"
	//
	// Experimental.
	WorkflowPath *string `field:"optional" json:"workflowPath" yaml:"workflowPath"`
	// GitHub workflow triggers.
	// Default: - By default, workflow is triggered on push to the `main` branch
	// and can also be triggered manually (`workflow_dispatch`).
	//
	// Experimental.
	WorkflowTriggers *WorkflowTriggers `field:"optional" json:"workflowTriggers" yaml:"workflowTriggers"`
}

